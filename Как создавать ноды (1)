1. Сделать рабочее пространство catkin_ws и папку src внутри него
    2. mkdir catkin_ws
    3. cd catkin_ws
    4. mkdir src
5. Собрать пространство
    6. catkin_make
7. Зайти в catkin_ws/src и создать пакет (проект)
    8. catkin_create_pkg <Имя проекта> <зависимости через пробел> (у нас это roscpp std_msgs)
9. Зайти в <Имя проекта>/src
10. Скинуть исходный код в эту папку (например publisher.cpp)
11. Указать в файле <Имя проекта>/CMakeLists.txt где лежит исходный код и необходимые библиотеки
    12. По умолчанию нужно расскоментировать 135 строчку add_executable(${PROJECT_NAME}_node src/talker.cpp)
    13. По умолчанию нужно расскоменировать 148-150 строчки target_link_libraries(${PROJECT_NAME}_node ${catkin_LIBRARIES} )
    14. Сохранить изменения
15. Вернуться в папку catkin_ws и пересобрать рабочее простанство (скомпилировать все файлы, создать ноды и т.д.)
    16. catkin_make
17. Зайти в папку с файлом ноды и запустить её
    18. cd catkin_ws/devel/lib/<Имя проекта>
    19. ./<имя файла ноды>

Первые два этапа делаются один раз. В дальнейшем при создании нового проекта (не ноды, а целого проекта) нужно использовать catkin_create_pkg в папке src
При создании новых нод в том же проекте нужно скидывать новые исходные коды в <Имя проекта>/src и добавлять новые строчки в <Имя проекта>/CMakeLists.txt как в пунктах 12-14

Команда catkin_make создаёт все необходимые папки и файлы
Команда catkin_create_pkg создаёт все необходимые папки и файлы проекта на основе указанного имени и зависимостей проекта

ключевая строчка в CMakeLists.txt - include_directories(${catkin_INCLUDE_DIRS}) эта команда линкует все C++ и ros библиотеки
